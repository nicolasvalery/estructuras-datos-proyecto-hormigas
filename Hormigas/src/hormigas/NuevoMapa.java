/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package hormigas;

/**
 *
 * @author Nico
 */
public class NuevoMapa extends javax.swing.JDialog {

    /**
     * Creates new form NuevoMapa
     */
    
    //inicializacion de variables
    int idCiudad = 1;
    int numCiudad;
    String[] nombres;
    String [] distancias;
    float[][] distanciasMatriz = new float[0][0];
    float[] distanciasSingular = new float[0];
    boolean close = false;
    boolean singular = false;
    
    //constructor
    public NuevoMapa(java.awt.Frame parent, boolean modal, int numCiudad, boolean singular) {        
        super(parent, modal);        
        this.numCiudad = numCiudad;
        this.singular = singular;
        nombres = new String[numCiudad];
        distancias = new String[numCiudad];
        initComponents();
        
        //si se abre el dialogo en modo 'agregar ciudad', se editan algunos jLabels
        if (singular == true) {
            jLabelNumDistancias.setText(String.valueOf(numCiudad));
            jLabelIdCiudad.setText(String.valueOf(numCiudad + 1) + " (agregando solo una ciudad)");
        }
        
    }
    
    //getters
    public String[] getNombres() {
        return nombres;
    }

    public String[] getDistancias() {
        return distancias;
    }

    public float[][] getDistanciasMatriz() {
        return distanciasMatriz;
    }

    public float[] getDistanciasSingular() {
        return distanciasSingular;
    }    
    
    public boolean isClose() {
        return close;
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelIdCiudad = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldNombre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaDistancias = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButtonSiguiente = new javax.swing.JButton();
        jButtonAnterior = new javax.swing.JButton();
        jButtonFinalizar = new javax.swing.JButton();
        jLabelNumDistancias = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabelIdCiudad.setText(String.valueOf(idCiudad)
        );

        jLabel2.setText("Ciudad #");

        jTextAreaDistancias.setColumns(20);
        jTextAreaDistancias.setRows(5);
        jScrollPane1.setViewportView(jTextAreaDistancias);

        jLabel3.setText("Nombre");

        jLabel4.setText("Distancia a");

        jLabel5.setText("otras ciudades");

        jLabel6.setText("(1 numero por linea)");

        jButtonSiguiente.setText("Siguiente");
        jButtonSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSiguienteActionPerformed(evt);
            }
        });

        jButtonAnterior.setText("Anterior");
        jButtonAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnteriorActionPerformed(evt);
            }
        });

        jButtonFinalizar.setText("Finalizar");
        jButtonFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFinalizarActionPerformed(evt);
            }
        });

        jLabelNumDistancias.setText(String.valueOf(numCiudad - idCiudad));

        jLabel8.setText("lineas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonAnterior)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSiguiente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelNumDistancias)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1)
                        .addComponent(jTextFieldNombre)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButtonFinalizar)))
                    .addComponent(jLabelIdCiudad))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIdCiudad)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabelNumDistancias))
                        .addGap(33, 33, 33))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSiguiente)
                    .addComponent(jButtonAnterior)
                    .addComponent(jButtonFinalizar))
                .addGap(25, 25, 25))
        );

        jButtonSiguiente.getAccessibleContext().setAccessibleParent(null);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSiguienteActionPerformed
        //para avanzar al proximo nodo al cual ingresar informacion
        
        //comprueba que no sea el ultimo nodo
        if (idCiudad < numCiudad) {
            
            //recupera la informacion insertada
            nombres[idCiudad - 1] = jTextFieldNombre.getText();
            distancias[idCiudad - 1] = jTextAreaDistancias.getText();
            
            //pasamos al siguiente nodo, reseteamos campos de entrada
            idCiudad++;
            jLabelIdCiudad.setText(String.valueOf(idCiudad));
            jLabelNumDistancias.setText(String.valueOf(numCiudad - idCiudad));
            
            //poblamos campos de entrada con informacion previamente ingresada si existe
            jTextFieldNombre.setText(nombres[idCiudad - 1]);
            jTextAreaDistancias.setText(distancias[idCiudad - 1]);
            
        }
        
    }//GEN-LAST:event_jButtonSiguienteActionPerformed

    private void jButtonAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnteriorActionPerformed
        //para regresar al nodo anterior y editar informacion por insertar
        
        //comprueba que no sea el primer nodo
        if (idCiudad > 1) {
            
            //recupera la informacion insertada
            nombres[idCiudad - 1] = jTextFieldNombre.getText();
            distancias[idCiudad - 1] = jTextAreaDistancias.getText();
            
            //pasamos al siguiente anterior, reseteamos campos de entrada
            idCiudad--;
            jLabelIdCiudad.setText(String.valueOf(idCiudad));
            jLabelNumDistancias.setText(String.valueOf(numCiudad - idCiudad));
            
            //poblamos campos de entrada con informacion previamente ingresada si existe
            jTextFieldNombre.setText(nombres[idCiudad - 1]);
            jTextAreaDistancias.setText(distancias[idCiudad - 1]);
            
        }
        
    }//GEN-LAST:event_jButtonAnteriorActionPerformed

    private void jButtonFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFinalizarActionPerformed
        //cerrar ventana y pasar informacion a la ventana principal
        
        //recupera la informacion del nodo actual, en caso que no este almacenada
        nombres[idCiudad - 1] = jTextFieldNombre.getText();
        distancias[idCiudad - 1] = jTextAreaDistancias.getText();
        
        //inicializacion de variables auxiliares a utilizar
        String[] lineas;
        distanciasMatriz = new float[numCiudad][numCiudad];
        distanciasSingular = new float[numCiudad + 1];
        
        //modo normal, almacenamiento de un grafo completo
        if (singular == false) {
            
            //llenamos todo distanciasMatriz inicialmente con -1 (nodos no conectados)
            for (int i = 0; i < distanciasMatriz.length; i++) {
                for (int j = 0; j < distanciasMatriz.length; j++) {
                    distanciasMatriz[i][j] = -1;
                }
            }
            
            //recorremos distanciasMatriz nuevamente para sobreescribir con los valores de distancia
            for (int i = 0; i < distancias.length - 1; i++) {
                
                //separamos las lineas del jTextArea en elementos de un vector de strings
                lineas = distancias[i].split("\\r?\\n");
                
                for (int j = 0; j < lineas.length; j++) {
                    //llenamos simetricamente distanciasMatriz al ser un grafo no dirigido, con los valores de distancia
                    distanciasMatriz[j + i + 1][i] = Float.parseFloat(lineas[j]);
                    distanciasMatriz[i][j + i + 1] = Float.parseFloat(lineas[j]);
                }
            }
        
        //modo 'agregar ciudad'
        }else if(singular == true){
            
            //separamos las lineas del jTextArea en elementos de un vector de strings
            lineas = distancias[0].split("\\r?\\n");
            
            //solo hay un nombre correspondiente a un nodo
            nombres = new String[]{jTextFieldNombre.getText()};
            
            //llenamos distanciasSingular con las distancias del nodo a agregar a las otras ciudades
            for (int i = 0; i < distanciasSingular.length - 1; i++) {
                distanciasSingular[i] = Float.parseFloat(lineas[i]);
            }
            
            //la distancia del nodo a si misma es invalida, en este caso -1
            distanciasSingular[distanciasSingular.length - 1] = -1;
            
        }
        
        //se comunica a la ventana principal el cierre del dialogo y se cierra
        close = true;
        dispose();
        
    }//GEN-LAST:event_jButtonFinalizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NuevoMapa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NuevoMapa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NuevoMapa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NuevoMapa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NuevoMapa dialog = new NuevoMapa(new javax.swing.JFrame(), true, 4, false);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAnterior;
    private javax.swing.JButton jButtonFinalizar;
    private javax.swing.JButton jButtonSiguiente;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelIdCiudad;
    private javax.swing.JLabel jLabelNumDistancias;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaDistancias;
    private javax.swing.JTextField jTextFieldNombre;
    // End of variables declaration//GEN-END:variables
}
